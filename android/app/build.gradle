plugins {
  id 'com.android.application'
  id 'com.google.gms.google-services'
}

android {
  compileSdk 34

  namespace "com.PuntoDuocApp.app"

  defaultConfig {
    applicationId "com.PuntoDuocApp.app"
    minSdkVersion 26
    targetSdkVersion 34
    versionCode 1
    versionName "1.0"

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ['room.schemaLocation': "$projectDir/schemas".toString()]
      }
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17

  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  buildToolsVersion '35.0.0'
}

repositories {
  flatDir {
    dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
  }
}



dependencies {
  implementation 'com.journeyapps:zxing-android-embedded:3.3.0'
  implementation 'androidx.appcompat:appcompat:1.7.0'
  implementation 'com.google.android.material:material:1.12.0'
  implementation project(':capacitor-android')
  implementation project(':capacitor-cordova-android-plugins')
  implementation project(':capacitor-barcode-scanner')
  testImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.test.ext:junit:1.2.1'
  androidTestImplementation 'androidx.test:core:1.6.1'
  androidTestImplementation 'androidx.test:runner:1.6.2'
  androidTestImplementation 'androidx.test:rules:1.6.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
  implementation platform('com.google.firebase:firebase-bom:33.7.0')
  implementation 'com.google.firebase:firebase-analytics'
  implementation 'com.google.firebase:firebase-messaging'
  implementation 'androidx.camera:camera-core:1.4.0'
  implementation 'androidx.camera:camera-camera2:1.4.0'
  implementation 'androidx.camera:camera-lifecycle:1.4.0'
  implementation 'androidx.camera:camera-view:1.4.0'


}

apply from: 'capacitor.build.gradle'

try {
  def servicesJSON = file('google-services.json')
  if (servicesJSON.text) {
    apply plugin: 'com.google.gms.google-services'
  }
} catch (Exception e) {
  logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
